{"name":"Trap","tagline":"Transport Abstraction Package","body":"Transport Abstraction Package (trap)\r\n====\r\n\r\nThis library provides a socket-based interface that abstracts a set of underlying transports (socket, websocket, http, functioncall), while allowing reconnects, network connection changes, compression and multiplexing. Trap can utilise one or more underlying connections to improve performance, is a fully binary protocol, and is designed to handle failures.\r\n\r\n# Features\r\nTrap provides\r\n\r\n* Transport independent data transfer using a message paradigm.\r\n* Optional, reliable, in-order hop-to-hop transfer, regardless of underlying medium.\r\n* Connection re-establishment, when applicable. This recovers from a network connection change (e.g. wifi to cellular data)\r\n* Multiplexing of up to 255 application streams, at configurable priority levels that allow pre-emption of bulk data.\r\n* Support for Java and JavaScript clients and servers (node.js required for servers).\r\n\r\nAs an abstraction, Trap applies the following overheads (measured in Java, as of 2014)\r\n* 16 bytes of protocol data per message (excluding transport overhead such as TCP/HTTP)\r\n* Approximately 50 kilobytes of RAM per connection (configurable usage for active connections)\r\n* A minimum of 200 kilobytes to load class files.\r\n* Two threads for network & timing. Additional threads as required by the application.\r\n* About 500 kilobytes .jar file (if using all features, including slf4j which Trap depends on)\r\n\r\n# Installation\r\nThe easiest way to add Trap for Java is to include the full archive in one step. The following code will include Trap as well as the four default, built-in transports. These transports are not suitable in all contexts, but can serve as a quickstart \r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.ericsson.research.trap.packaging</groupId>\r\n\t\t\t<artifactId>trap-full</artifactId>\r\n\t\t\t<version>1.3.0-SNAPSHOT</version>\r\n\t\t</dependency>\r\n\r\nThe recommended way is to include the specific transports as needed. The full list of transports is available in the main repo <https://github.com/EricssonResearch/trap/tree/master/trap-transports>. Some transports, such as HTTP, have multiple providers. It is recommended to use the best provider available (e.g. Servlet) when applicable.\r\n\r\n# Getting Started\r\nHave a look at the examples <https://github.com/EricssonResearch/trap/tree/master/trap-api/src/main/java/com/ericsson/research/trap/examples>. They provide a good Java quickstart. JavaScript is coming soonâ„¢.\r\n\r\n# Documentation\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}